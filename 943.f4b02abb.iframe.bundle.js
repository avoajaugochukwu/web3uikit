(self.webpackChunkweb3uikit=self.webpackChunkweb3uikit||[]).push([[943,201],{"./node_modules/.pnpm/@web3auth+wallet-connect-v1-adapter@1.1.1_@babel+runtime@7.18.3/node_modules/@web3auth/wallet-connect-v1-adapter/dist/walletConnectV1Adapter.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{WalletConnectV1Adapter:()=>WalletConnectV1Adapter});var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/@babel+runtime@7.18.3/node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_walletconnect_client__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/@walletconnect+client@1.7.8/node_modules/@walletconnect/client/dist/esm/index.js"),_web3auth_base__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@web3auth+base@1.1.1_@babel+runtime@7.18.3/node_modules/@web3auth/base/dist/base.esm.js"),_web3auth_ethereum_provider__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@web3auth+ethereum-provider@1.1.1_@babel+runtime@7.18.3/node_modules/@web3auth/ethereum-provider/dist/ethereumProvider.esm.js");const WALLET_CONNECT_EXTENSION_ADAPTERS=[{name:"Rainbow",chains:[_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.EIP155],logo:"https://images.web3auth.io/login-rainbow.svg",mobile:{native:"rainbow:",universal:"https://rnbwapp.com"},desktop:{native:"",universal:""}},{name:"MetaMask",chains:[_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.EIP155],logo:"https://images.web3auth.io/login-metamask.svg",mobile:{native:"metamask:",universal:"https://metamask.app.link"},desktop:{native:"",universal:""}}];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}class WalletConnectV1Adapter extends _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.J5{constructor(){let options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(this,"name",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.rW.WALLET_CONNECT_V1),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(this,"adapterNamespace",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.yk.EIP155),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(this,"currentChainNamespace",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.EIP155),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(this,"type",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.hN.EXTERNAL),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(this,"adapterOptions",void 0),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(this,"status",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.NOT_READY),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(this,"adapterData",{uri:"",extensionAdapters:WALLET_CONNECT_EXTENSION_ADAPTERS}),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(this,"connector",null),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(this,"wcProvider",null),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(this,"rehydrated",!1),this.adapterOptions=function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__.Z)(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},options),this.chainConfig=options.chainConfig||null}get connected(){var _this$connector;return!(null===(_this$connector=this.connector)||void 0===_this$connector||!_this$connector.connected)}get provider(){var _this$wcProvider;return(null===(_this$wcProvider=this.wcProvider)||void 0===_this$wcProvider?void 0:_this$wcProvider.provider)||null}set provider(_){throw new Error("Not implemented")}async init(){super.checkInitializationRequirements(),this.chainConfig||(this.chainConfig=(0,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.h2)(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.EIP155,1)),this.connector=this.getWalletConnectInstance(),this.wcProvider=new _web3auth_ethereum_provider__WEBPACK_IMPORTED_MODULE_2__.WalletConnectProvider({config:{chainConfig:this.chainConfig},connector:this.connector}),this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.READY,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.rW.WALLET_CONNECT_V1),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.READY,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.debug("initializing wallet connect v1 adapter"),this.connector.connected&&(this.rehydrated=!0,await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId}))}async connect(){if(super.checkConnectionRequirements(),!this.connector)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.notReady("Wallet adapter is not ready yet");if(this.connected)return await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId}),this.provider;if(this.status!==_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.CONNECTING){var _this$adapterOptions$,_this$adapterOptions$2;if(null!==(_this$adapterOptions$=this.adapterOptions.adapterSettings)&&void 0!==_this$adapterOptions$&&_this$adapterOptions$.qrcodeModal)this.connector=this.getWalletConnectInstance(),this.wcProvider=new _web3auth_ethereum_provider__WEBPACK_IMPORTED_MODULE_2__.WalletConnectProvider({config:{chainConfig:this.chainConfig,skipLookupNetwork:null===(_this$adapterOptions$2=this.adapterOptions.adapterSettings)||void 0===_this$adapterOptions$2?void 0:_this$adapterOptions$2.skipNetworkSwitching},connector:this.connector});await this.createNewSession(),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.CONNECTING,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.CONNECTING,{adapter:_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.rW.WALLET_CONNECT_V1})}return new Promise(((resolve,reject)=>{if(!this.connector)return reject(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.notReady("Wallet adapter is not ready yet"));this.connector.on("modal_closed",(async()=>(this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.READY,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.READY,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.rW.WALLET_CONNECT_V1),reject(new Error("User closed modal")))));try{this.connector.on("connect",(async(error,payload)=>(error&&this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.ERRORED,error),_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.debug("connected event emitted by web3auth"),await this.onConnectHandler(payload.params[0]),resolve(this.provider))))}catch(error){_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.error("Wallet connect v1 adapter error while connecting",error),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.READY,this.rehydrated=!0,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.ERRORED,error),reject(error instanceof _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.up?error:_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.RM.connectionError("Failed to login with wallet connect: ".concat((null==error?void 0:error.message)||"")))}}))}async getUserInfo(){if(!this.connected)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.RM.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async disconnect(){let options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};const{cleanup}=options;if(!this.connector||!this.connected)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.RM.notConnectedError("Not connected with wallet");await this.connector.killSession(),this.rehydrated=!1,cleanup?(this.connector=null,this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.NOT_READY,this.wcProvider=null):this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.READY,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.DISCONNECTED)}async addChain(chainConfig){try{var _this$adapterOptions$3;if(!this.wcProvider)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.notReady("Wallet adapter is not ready yet");const networkSwitch=null===(_this$adapterOptions$3=this.adapterOptions.adapterSettings)||void 0===_this$adapterOptions$3?void 0:_this$adapterOptions$3.networkSwitchModal;networkSwitch&&await networkSwitch.addNetwork({chainConfig,appOrigin:window.location.hostname}),await this.wcProvider.addChain(chainConfig)}catch(error){_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.error(error)}}async switchChain(connectedChainConfig,chainConfig){var _this$adapterOptions$4;if(!this.wcProvider)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.notReady("Wallet adapter is not ready yet");const networkSwitch=null===(_this$adapterOptions$4=this.adapterOptions.adapterSettings)||void 0===_this$adapterOptions$4?void 0:_this$adapterOptions$4.networkSwitchModal;networkSwitch&&await networkSwitch.switchNetwork({currentChainConfig:chainConfig,newChainConfig:connectedChainConfig,appOrigin:window.location.hostname}),await this.wcProvider.switchChain({chainId:chainConfig.chainId,lookup:!1,addChain:!1})}async createNewSession(){var _this$adapterOptions,_this$adapterOptions$5;let opts=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{forceNewSession:!1};if(!this.connector)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.notReady("Wallet adapter is not ready yet");if(opts.forceNewSession&&this.connector.pending&&await this.connector.killSession(),null===(_this$adapterOptions=this.adapterOptions)||void 0===_this$adapterOptions||null===(_this$adapterOptions$5=_this$adapterOptions.adapterSettings)||void 0===_this$adapterOptions$5||!_this$adapterOptions$5.qrcodeModal)return new Promise(((resolve,reject)=>{var _this$chainConfig2;if(!this.connector)return reject(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.notReady("Wallet adapter is not ready yet"));_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.debug("creating new session for web3auth wallet connect"),this.connector.on("display_uri",(async(err,payload)=>{var _this$connector2;if(err)return this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.ERRORED,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.RM.connectionError("Failed to display wallet connect qr code")),reject(err);const uri=payload.params[0];return this.updateAdapterData({uri,extensionAdapters:WALLET_CONNECT_EXTENSION_ADAPTERS}),null===(_this$connector2=this.connector)||void 0===_this$connector2||_this$connector2.off("display_uri"),resolve()})),this.connector.createSession({chainId:parseInt((null===(_this$chainConfig2=this.chainConfig)||void 0===_this$chainConfig2?void 0:_this$chainConfig2.chainId)||"0x1",16)}).catch((error=>(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.error("error while creating new wallet connect session",error),this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.ERRORED,error),reject(error))))}));var _this$chainConfig;await this.connector.createSession({chainId:parseInt((null===(_this$chainConfig=this.chainConfig)||void 0===_this$chainConfig?void 0:_this$chainConfig.chainId)||"0x1",16)})}async onConnectHandler(params){if(!this.connector||!this.wcProvider)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.notReady("Wallet adapter is not ready yet");if(!this.chainConfig)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.invalidParams("Chain config is not set");const{chainId}=params;if(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.debug("connected chainId in hex"),chainId!==parseInt(this.chainConfig.chainId,16)){var _this$adapterOptions$6,_this$adapterOptions2,_this$adapterOptions3;const connectedChainConfig=(0,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.h2)(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.EIP155,chainId)||{chainId:"0x".concat(chainId.toString(16)),displayName:"Unknown Network"},isCustomUi=null===(_this$adapterOptions$6=this.adapterOptions.adapterSettings)||void 0===_this$adapterOptions$6?void 0:_this$adapterOptions$6.qrcodeModal;if(!isCustomUi||isCustomUi&&(null===(_this$adapterOptions2=this.adapterOptions)||void 0===_this$adapterOptions2||null===(_this$adapterOptions3=_this$adapterOptions2.adapterSettings)||void 0===_this$adapterOptions3||!_this$adapterOptions3.skipNetworkSwitching))try{await this.addChain(this.chainConfig),await this.switchChain(connectedChainConfig,this.chainConfig),this.connector=this.getWalletConnectInstance()}catch(error){return _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.error("error while chain switching",error),await this.createNewSession({forceNewSession:!0}),this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.ERRORED,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.fromCode(5e3,"Not connected to correct network. Expected: ".concat(this.chainConfig.displayName,", Current: ").concat((null==connectedChainConfig?void 0:connectedChainConfig.displayName)||chainId,", Please switch to correct network from wallet"))),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.READY,void(this.rehydrated=!0)}}await this.wcProvider.setupProvider(this.connector),this.subscribeEvents(this.connector),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.CONNECTED,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.CONNECTED,{adapter:_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.rW.WALLET_CONNECT_V1,reconnected:this.rehydrated})}subscribeEvents(connector){connector.on("session_update",(async error=>{error&&this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.ERRORED,error)}))}getWalletConnectInstance(){const walletConnectOptions=this.adapterOptions.adapterSettings||{};return walletConnectOptions.bridge=walletConnectOptions.bridge||"https://bridge.walletconnect.org",new _walletconnect_client__WEBPACK_IMPORTED_MODULE_0__.Z(walletConnectOptions)}}},"?78b1":()=>{}}]);